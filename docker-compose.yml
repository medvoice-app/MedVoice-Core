version: '2.4'

services:
  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - bridge-net
    volumes:
      - ./static:/usr/share/nginx/html/static
      - ./assets:/usr/share/nginx/html/assets
      - ./index.html:/usr/share/nginx/html/index.html
      - nginx_logs:/var/log/nginx
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  minio:
    image: minio/minio:latest
    pull_policy: always
    ports:
      - "9000:9000" # API
      - "9001:9001" # Web Console
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - bridge-net
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--spider", "http://localhost:9000/minio/health/live" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: always

  web:
    build: .
    ports:
      - 8000:8000
    environment:
      - REDIS_URL=redis://redis:6379/0
      - RUNNING_IN_DOCKER=true
      - MINIO_ENDPOINT=minio:9000
      - MINIO_EXTERNAL_ENDPOINT=localhost:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_SECURE=false
      - MINIO_BUCKET_NAME=medvoice-storage
    env_file:
      - .env
    command: [ "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--loop", "asyncio" ]
    volumes:
      - ./app:/workspace/code/app
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - bridge-net
    depends_on:
      - redis
      - db
      - pgvector-db
      - minio

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: nurses_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bridge-net

  pgvector-db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: vector_db
    volumes:
      - pgvector_data:/var/lib/postgresql/data
    networks:
      - bridge-net

  worker:
    build: .
    command: celery -A app.worker.celery_app worker --concurrency=1 --loglevel=info
    volumes:
      - ./app:/workspace/code/app
    environment:
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_EXTERNAL_ENDPOINT=localhost:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_SECURE=false
      - MINIO_BUCKET_NAME=medvoice-storage
    networks:
      - bridge-net
    depends_on:
      minio:
        condition: service_started
      redis:
        condition: service_started
      web:
        condition: service_started
    restart: on-failure # Add restart policy to handle temporary network issues

  redis:
    image: redis:7
    networks:
      - bridge-net

  dashboard:
    build: .
    # Replace direct command with wrapper script
    command: >
      bash -c "
        echo 'Waiting for workers to initialize...' &&
        sleep 10 &&
        echo 'Starting Flower dashboard...' &&
        celery --broker=redis://redis:6379/0 flower --port=5555
      "
    ports:
      - 5557:5555
    environment:
      - REDIS_URL=redis://redis:6379/0
    networks:
      - bridge-net
    # Make dashboard depend on all services
    depends_on:
      - worker
      - redis
      - web
      - minio
      - db
      - pgvector-db

volumes:
  local-vol:
    driver: local
  postgres_data:
  pgvector_data:
  nginx_logs:
  minio_data:


networks:
  bridge-net:
    driver: bridge
